// Reusable placeholder selectors
%interactive-element {
  border-radius: var(--radius-sm);
  transition: background-color 0.2s ease;
  cursor: pointer;

  &:hover {
    background-color: var(--color-surface-muted);
  }

  &:focus-visible {
    outline: var(--border-focus);
    outline-offset: 2px;
  }
}

%list-reset {
  list-style: none;
  padding: 0;
  margin: 0;
}

%list-item-spacing {
  &:not(:last-child) {
    margin-bottom: var(--space-1);
  }
}

%base-text-style {
  color: var(--color-text-primary);
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-medium);
}

// Typography mixins
@mixin text-heading-large {
  font-size: var(--font-size-xl);
  font-weight: var(--font-weight-bold);
  line-height: var(--line-height-tight);
  color: var(--color-text-primary);
  margin: 0;
}

@mixin text-heading-medium {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-bold);
  line-height: var(--line-height-tight);
  color: var(--color-text-primary);
  margin: 0;
}

@mixin text-heading-small {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  line-height: var(--line-height-tight);
  color: var(--color-text-primary);
  margin: 0;
}

@mixin text-body {
  font-size: var(--font-size-base);
  line-height: var(--line-height-relaxed);
  color: var(--color-text-secondary);
  margin: 0;
}

@mixin text-body-small {
  font-size: var(--font-size-sm);
  line-height: var(--line-height-base);
  color: var(--color-text-secondary);
  margin: 0;
}

@mixin text-label {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  color: var(--color-text-primary);
}

@mixin text-label-uppercase {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  text-transform: uppercase;
  letter-spacing: var(--letter-spacing-wide);
  color: var(--color-text-muted);
}

@mixin text-label-uppercase-spaced {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  text-transform: uppercase;
  letter-spacing: var(--letter-spacing-wider);
  color: var(--color-text-muted);
}

@mixin text-price {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-bold);
  color: var(--color-accent-secondary);
}

@mixin text-price-large {
  font-size: clamp(var(--font-size-lg), 2vw, var(--font-size-xl));
  font-weight: var(--font-weight-bold);
  color: var(--color-accent-secondary);
}

// Text decoration mixins
@mixin text-link {
  text-decoration: none;
  color: inherit;
  transition: color 0.2s ease;

  &:hover {
    color: var(--color-accent-interactive);
  }

  &:focus-visible {
    outline: var(--border-focus);
    outline-offset: 2px;
  }
}

@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines;
  line-clamp: $lines;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Breakpoint mixins for mobile-first responsive design
// These mixins can be imported in component styles without adding to bundle size
@mixin media-xs {
  @media (min-width: 480px) {
    @content;
  }
}

@mixin media-sm {
  @media (min-width: 640px) {
    @content;
  }
}

@mixin media-md {
  @media (min-width: 768px) {
    @content;
  }
}

@mixin media-lg {
  @media (min-width: 1024px) {
    @content;
  }
}

@mixin media-xl {
  @media (min-width: 1280px) {
    @content;
  }
}

@mixin media-2xl {
  @media (min-width: 1536px) {
    @content;
  }
}

// Animation mixins
@mixin stagger-animation {
  --stagger-index: 0;
  --stagger-delay: calc(var(--stagger-index) * 50ms);
  animation: stagger-fade-in 0.6s ease-out var(--stagger-delay) both;
}

@keyframes stagger-fade-in {
  from {
    opacity: 0;
    transform: translateY(20px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}
